//  __  _  __    __   ___ __  ___ ___  
// |  \| |/__\ /' _/ / _//__\| _ \ __| 
// | | ' | \/ |`._`.| \_| \/ | v / _|  
// |_|\__|\__/ |___/ \__/\__/|_|_\___| 
// 
// Copyright (C) 2019 - NosCore
// 
// NosCore is a free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

using System.ComponentModel.DataAnnotations;
using NosCore.Data.I18N;
using NosCore.Data.Dto;
using NosCore.Data.StaticEntities;
using NosCore.Data.DataAttributes;
using NosCore.Data.Enumerations.I18N;
using Mapster;

namespace NosCore.Data.StaticEntities
{
	/// <summary>
	/// Represents a DTO class for NosCore.Database.Entities.Map.
	/// NOTE: This class is generated by GenerateDtos.tt
	/// </summary>
	[StaticMetaData(LoadedMessage = LogLanguageKey.MAPS_LOADED,EmptyMessage = LogLanguageKey.NO_MAP)]
	public class MapDto : IStaticDto
	{
		[AdaptIgnore]
	// foreign key injection of Character
		public System.Collections.Generic.ICollection<CharacterDto> CharacterDto { get; set; }

	 	public byte[] Data { get; set; }

	 	[Key]
		public short MapId { get; set; }

	 	[AdaptIgnore]
	// foreign key injection of MapMonster
		public System.Collections.Generic.ICollection<MapMonsterDto> MapMonsterDto { get; set; }

	 	[AdaptIgnore]
	// foreign key injection of MapNpc
		public System.Collections.Generic.ICollection<MapNpcDto> MapNpcDto { get; set; }

	 	[AdaptIgnore]
	// foreign key injection of MapTypeMap
		public System.Collections.Generic.ICollection<MapTypeMapDto> MapTypeMapDto { get; set; }

	 	public int Music { get; set; }

	 	[I18NFrom(typeof(I18NMapIdDataDto))]
		public I18NString Name { get; set; } = new I18NString();
		[AdaptMember("Name")]
		public string NameI18NKey { get; set; }

	 	[AdaptIgnore]
	// foreign key injection of Portal
		public System.Collections.Generic.ICollection<PortalDto> PortalDto { get; set; }

	 	[AdaptIgnore]
	// foreign key injection of Portal1
		public System.Collections.Generic.ICollection<PortalDto> Portal1Dto { get; set; }

	 	[AdaptIgnore]
	// foreign key injection of Respawn
		public System.Collections.Generic.ICollection<RespawnDto> RespawnDto { get; set; }

	 	[AdaptIgnore]
	// foreign key injection of RespawnMapType
		public System.Collections.Generic.ICollection<RespawnMapTypeDto> RespawnMapTypeDto { get; set; }

	 	[AdaptIgnore]
	// foreign key injection of ScriptedInstance
		public System.Collections.Generic.ICollection<ScriptedInstanceDto> ScriptedInstanceDto { get; set; }

	 	public bool ShopAllowed { get; set; }

	 	[AdaptIgnore]
	// foreign key injection of Teleporter
		public System.Collections.Generic.ICollection<TeleporterDto> TeleporterDto { get; set; }

	 }
}